class Object:
    """
    Абстрактный класс, описывающий любой объект.
    """
    def __init__(self, name: str, weight: float, color: str):
        """
        Инициализирует объект его именем, весом и цветом.

        Args:
            name: Строка, представляющая имя объекта.
            weight: Вещественное число, представляющее вес объекта в килограммах.
            color: Строка, представляющая цвет объекта.
        """
        self.name = name
        self.weight = weight
        self.color = color

    def move(self, x: float, y: float) -> None:
        """
        Перемещает объект в новую позицию.

        Args:
            x: Вещественное число, представляющее новую x-координату объекта.
            y: Вещественное число, представляющее новую y-координату объекта.

        Returns:
            None
        """
        ...

    def change_color(self, new_color: str) -> None:
        """
        Изменяет цвет объекта.

        Args:
            new_color: Строка, представляющая новый цвет объекта.

        Returns:
            None
        """
        ...

    def get_weight(self) -> float:
        """
        Возвращает вес объекта.

        Args:
            None

        Returns:
            Вещественное число, представляющее вес объекта в килограммах.
        """
        ...

class Animal:
    """
    Абстрактный класс, описывающий любое животное.
    """
    def __init__(self, name: str, age: int, species: str):
        """
        Инициализирует животное его именем, возрастом и видом.

        Args:
            name: Строка, представляющая имя животного.
            age: Целое число, представляющее возраст животного в годах.
            species: Строка, представляющая вид животного.
        """
        self.name = name
        self.age = age
        self.species = species

    def eat(self, food: str, quantity: float) -> None:
        """
        Заставляет животное съесть определенное количество пищи.

        Args:
            food: Строка, представляющая тип пищи, которую ест животное.
            quantity: Вещественное число, представляющее количество пищи в килограммах.

        Returns:
            None
        """
        ...

    def sleep(self, hours: float) -> None:
        """
        Заставляет животное спать определенное количество часов.

        Args:
            hours: Вещественное число, представляющее количество часов, которое животное спит.

        Returns:
            None
        """
        ...

    def make_sound(self) -> str:
        """
        Возвращает звук, издаваемый животным.

        Args:
            None

        Returns:
            Строка, представляющая звук, издаваемый животным.
        """
        ...

class Person:
    """
    Абстрактный класс, описывающий любого человека.
    """
    def __init__(self, name: str, age: int, gender: str):
        """
        Инициализирует человека его именем, возрастом и полом.

        Args:
            name: Строка, представляющая имя человека.
            age: Целое число, представляющее возраст человека в годах.
            gender: Строка, представляющая пол человека.
        """
        self.name = name
        self.age = age
        self.gender = gender

    def talk(self, message: str) -> None:
        """
        Заставляет человека говорить сообщение.

        Args:
            message: Строка, представляющая сообщение, которое человек говорит.

        Returns:
            None
        """
        ...

    def walk(self, distance: float) -> None:
        """
        Заставляет человека пройти определенное расстояние.

        Args:
            distance: Вещественное число, представляющее расстояние, которое человек проходит в километрах.

        Returns:
            None
        """
        ...

    def get_age(self) -> int:
        """
        Возвращает возраст человека.

        Args:
            None

        Returns:
            Целое число, представляющее возраст человека в годах.
        """
        ...